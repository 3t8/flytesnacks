
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_core/intermediate/schema.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_core_intermediate_schema.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_core_intermediate_schema.py:


Using Schemas
------------------

This example explains how an untyped schema is passed between tasks using :py:class:`pandas.DataFrame`.
Flytekit makes it possible for users to directly return or accept a :py:class:`pandas.DataFrame`, which are automatically
converted into flyte's abstract representation of a schema object

.. GENERATED FROM PYTHON SOURCE LINES 10-13

.. code-block:: default

    import pandas
    from flytekit import task, workflow


.. GENERATED FROM PYTHON SOURCE LINES 14-16

Flytekit allows users to directly use pandas.dataframe in their tasks as long as they import
Note: # noqa: F401. This is to ignore pylint complaining about unused imports

.. GENERATED FROM PYTHON SOURCE LINES 16-19

.. code-block:: default

    from flytekit.types import schema  # noqa: F401



.. GENERATED FROM PYTHON SOURCE LINES 20-22

This task generates a pandas.DataFrame and returns it. The Dataframe itself will be serialized to an intermediate
format like parquet before passing between tasks

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: default

    @task
    def get_df(a: int) -> pandas.DataFrame:
        """
        Generate a sample dataframe
        """
        return pandas.DataFrame(data={"col1": [a, 2], "col2": [a, 4]})



.. GENERATED FROM PYTHON SOURCE LINES 31-32

This task shows an example of transforming a dataFrame

.. GENERATED FROM PYTHON SOURCE LINES 32-41

.. code-block:: default

    @task
    def add_df(df: pandas.DataFrame) -> pandas.DataFrame:
        """
        Append some data to the dataframe.
        NOTE: this may result in runtime failures if the columns do not match
        """
        return df.append(pandas.DataFrame(data={"col1": [5, 10], "col2": [5, 10]}))



.. GENERATED FROM PYTHON SOURCE LINES 42-43

The workflow shows that passing DataFrame's between tasks is as simple as passing dataFrames in memory

.. GENERATED FROM PYTHON SOURCE LINES 43-52

.. code-block:: default

    @workflow
    def df_wf(a: int) -> pandas.DataFrame:
        """
        Pass data between the dataframes
        """
        df = get_df(a=a)
        return add_df(df=df)



.. GENERATED FROM PYTHON SOURCE LINES 53-54

The entire program can be run locally

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default

    if __name__ == "__main__":
        print(f"Running {__file__} main...")
        print(f"Running df_wf(a=42) {df_wf(a=42)}")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_core_intermediate_schema.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: schema.py <schema.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: schema.ipynb <schema.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
