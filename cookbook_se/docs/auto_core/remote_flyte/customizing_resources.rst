
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_core/remote_flyte/customizing_resources.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_core_remote_flyte_customizing_resources.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_core_remote_flyte_customizing_resources.py:


Customizing task resources like mem/cpu
--------------------------------------------

One of the reasons why you would want to use a hosted Flyte environment is due to the potential of leveraging CPU, memory and storage resources, far greater than whats available locally.
Flytekit makes it possible to specify these requirements declaratively and close to where the task itself is declared.

.. GENERATED FROM PYTHON SOURCE LINES 9-13

.. code-block:: default

    import typing
    from flytekit import task, workflow



.. GENERATED FROM PYTHON SOURCE LINES 14-35

In this example the memory required by the function increases as the dataset size increases. For large datasets we may not be able to run locally. Thus we want to provide hints to flyte backend that we want to request for more memory.
This is done by simply decorating the task with the hints as shown in the following code sample. The following parameters are available to be changed for a task

#. ``cpu_request`` minimum cpu requested
#. ``cpu_limit`` maximum cpu possible
#. ``memory_request`` min memory requested
#. ``memory_limit`` max memory possible
#. ``gpu_request`` min gpus requested
#. ``gpu_limit`` max gpus requested, they should be the same?,kub

The following resources are not yet supported, but coming soon

#. ``storage_request`` min storage requested
#. ``storage_limit`` max storage possible

The acutal values follow the `kubernetes convention <https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/>`_.

.. warning::

   We are working on changing how the cpu-request, memory is configured. This API is likely to change in alpha-3. The changes will be minimal


.. GENERATED FROM PYTHON SOURCE LINES 35-43

.. code-block:: default

    @task(cpu_request="1", memory_request="2048")
    def count_unique_numbers(x: typing.List[int]) -> int:
        s = set()
        for i in x:
            s.add(i)
        return len(s)



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Now lets create a dummy task that squares the number

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default

    @task
    def square(x: int) -> int:
        return x * x



.. GENERATED FROM PYTHON SOURCE LINES 51-52

The tasks decorated with memory and storage hints can be used like regular tasks in a workflow, as follows

.. GENERATED FROM PYTHON SOURCE LINES 52-59

.. code-block:: default



    @workflow
    def my_workflow(x: typing.List[int]) -> int:
        return square(x=count_unique_numbers(x=x))



.. GENERATED FROM PYTHON SOURCE LINES 60-61

The workflow and task can be executed locally

.. GENERATED FROM PYTHON SOURCE LINES 61-64

.. code-block:: default

    if __name__ == "__main__":
        print(count_unique_numbers(x=[1, 1, 2]))
        print(my_workflow(x=[1, 1, 2]))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_core_remote_flyte_customizing_resources.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: customizing_resources.py <customizing_resources.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: customizing_resources.ipynb <customizing_resources.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
