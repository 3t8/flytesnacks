name: Serialize & Release Examples

on:
  pull_request:
    paths-ignore:
      - 'cookbook/docs/**'
      - 'cookbook/deployment/**'
  create:
    tags:
      - v*

jobs:
  release-serialized-example:
    name: Serialize
    strategy:
      matrix:
        directory: [ "core", "integrations", "case_studies" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: Start Flytectl sandbox
        run: make setup
      - name: Setup Flytectl config
        run: flytectl config init
      - name: Setup python requirments
        run: |
          mkdir release
      - name: Test Serialize & Register ${{ matrix.directory }} example
        if: github.event_name == 'pull_request'
        run: |
          make -C cookbook/${{ matrix.directory }} requirements
          OUTPUT_DIR=$(pwd)/release/ VERSION=v1 make -C cookbook/${{ matrix.directory }} register
          OUTPUT_DIR=$(pwd)/release/ VERSION=v2 make -C cookbook/${{ matrix.directory }} fast_register
      - name: Serialize ${{ matrix.directory }} example for release
        if: github.event_name != 'pull_request'
        env:
          REGISTRY: "cr.flyte.org/flyteorg"
        run: |
          OUTPUT_DIR=$(pwd)/release/ VERSION=latest make -C cookbook/${{ matrix.directory }} serialize
      - name: Clean Git
        run: git stash
      - name: Run GoReleaser
        if: github.event_name != 'pull_request'
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}