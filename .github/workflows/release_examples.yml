name: Serialize & Release Examples

on:
  pull_request:
    paths-ignore:
      - 'cookbook/docs/**'
      - 'cookbook/deployment/**'
  create:
    tags:
      - v*

defaults:
  run:
    # https://github.com/actions/runner/issues/241#issuecomment-577360161
    shell: 'script -q -e -c "bash {0}"'

jobs:
  release-serialized-example:
    name: Serialize
    strategy:
      matrix:
        directory: [ "core", "integrations", "case_studies" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: setup sandbox
        run: make setup
      - name: setup sandbox
        run: flytectl config init
      - name: Serialize Examples
        run: |
          REGISTRY=ghcr.io/flyteorg VERSION=latest make -C cookbook/${{ matrix.directory }} serialize
      - name: Archive Serialized protos
        run: |
          mkdir -p cookbook/release-snacks temp
          make -C cookbook archive
          cp -r cookbook/release-snacks/* temp/*
      - name: Register ${{ matrix.directory }} example
        run: |
          flytectl register files -p flytesnacks -d development --archive cookbook/release-snacks/* --version=v1
      - name: Fast Serialize Examples
        run: |
          REGISTRY=ghcr.io/flyteorg VERSION=latest make -C cookbook/${{ matrix.directory }} fast_serialize
      - name: Archive Fast Serialized protos
        run: |
          make -C cookbook archive
      - name: Fast Register ${{ matrix.directory }} example
        run: |
          flytectl register files -p flytesnacks -d development --archive cookbook/release-snacks/* --version=v2
      - name: Prepare Release
        run: |
          rm -rf cookbook/release-snacks && mkdir -p cookbook/release-snacks
          cp -r temp/* cookbook/release-snacks/
          rm -rf temp
      - name: Run GoReleaser
        if: github.event_name != 'pull_request'
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}