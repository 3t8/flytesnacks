name: Serialize, Register & Release Examples

on:
  pull_request:
    paths-ignore:
      - 'cookbook/docs/**'
      - 'cookbook/deployment/**'
  create:
    tags:
      - v*

defaults:
  run:
    # https://github.com/actions/runner/issues/241#issuecomment-577360161
    shell: 'script -q -e -c "bash {0}"'

jobs:
  # Lists all directories that have Dockerfile in them...
  list:
    runs-on: ubuntu-latest
    name: "Create a list of packages"
    steps:
      - uses: actions/checkout@v2
      - name: "Provide the list"
        id: create-list
        run: echo "::set-output name=packages::$(find cookbook -mindepth 1 -maxdepth 5 -type f -name Dockerfile -exec dirname '{}' \; | sort | jq --raw-input . | jq --slurp . | jq -c .)"
    outputs:
      packages: "${{ steps.create-list.outputs.packages }}"

  # Use matrix strategy to run serialize for all directories in parallel. This also uploads the examples as artifacts
  # for the workflow.
  serialize:
    name: Sandbox
    runs-on: ubuntu-latest
    needs: [ "list" ]
    strategy:
      matrix:
        directory: "${{ fromJson(needs.list.outputs.packages) }}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Serialize Examples
        env:
          SANDBOX: "1"
        run: |
          make -C ${{ matrix.directory }} serialize
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          # TODO (Yuvraj): The name here isn't working... we need a unique name..
          name: "$(sed -i '' 's_/_-_' ${{ matrix.directory }})"
          path: ${{ matrix.directory }}/_pb_output/*

  # Download all artifacts generated from the previous job. Startup a sandbox cluster then register all of them.
  # TODO(Yuvraj) Compeltely untested... never reached here...
  register:
    name: Sandbox
    runs-on: ubuntu-latest
    needs: [ "list", "serialize" ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: setup sandbox
        run: make setup
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Serialize Examples
        env:
          SANDBOX: "1"
        run: |
          ls **
  #          make -C ${{ matrix.directory }} ${{ matrix.command }}

  # Download artifacts again and push them to the release only if this is not a pull request
  # TODO(Yuvraj) Compeltely untested... never reached here...
  release:
    name: Release Manifest
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
      - name: Serialize Examples
        env:
          REGISTRY: "ghcr.io/flyteorg"
        run: |
          mkdir -p cookbook/release-snacks
          cp cookbook/flyte_tests_manifest.json cookbook/release-snacks/flyte_tests_manifest.json
      - name: Release test manifest
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}