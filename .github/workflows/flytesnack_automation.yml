name: Build & Push flytesnacks

on:
  pull_request:
  create:
    tags:
      - v*

jobs:
  setup-directory:
    name: Setup Directory
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cookbook
    outputs:
      directory: ${{ steps.set-matrix.outputs.directory }}
    strategy:
      matrix:
        directory:
          - name: core
            path: .
          - name: pod
            path: integrations/kubernetes
          - name: k8s_spark
            path: integrations/kubernetes
          - name: kfpytorch
            path: integrations/kubernetes
          - name: sqlite_datacleaning
            path: case_studies/feature_engineering
          - name: sagemaker_training
            path: integrations/aws
          - name: sagemaker_pytorch
            path: integrations/aws
          - name: pima_diabetes
            path: case_studies/ml_training
          - name: papermilltasks
            path: integrations/flytekit_plugins
          - name: pandera
            path: integrations/flytekit_plugins
          - name: house_price_prediction
            path: case_studies/ml_training
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - id: set-matrix
        run: |
          echo "::set-output name=directory::${{ matrix.directory }}"

  push_github:
    name: Push to GHCR
    runs-on: ubuntu-latest
    needs: [ setup-directory ]
    defaults:
      run:
        working-directory: cookbook
    strategy:
      matrix:
        directory: ${{fromJson(${{needs.setup-directory.outputs.directory)}})}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Push Spark Plugin Docker Image to Github Registry
        uses: whoan/docker-build-with-cache-action@v5
        with:
          # https://docs.github.com/en/packages/learn-github-packages/publishing-a-package
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"
          image_name: ${{ github.repository_owner }}/flytecookbook
          image_tag: ${{ matrix.directory.name }}-latest,${{ matrix.directory.name }}-${{ github.sha }},${{ matrix.directory.name }}-${{ github.event.ref }}
          push_git_tag: ${{ github.event_name != 'pull_request' }}
          push_image_and_stages: ${{ github.event_name != 'pull_request' }}
          registry: ghcr.io
          build_extra_args: "--compress=true --build-arg=tag=ghcr.io/${{ github.repository_owner }}/flytecookbook:${{ matrix.directory.name }}-${{ github.sha }}"
          context: ./cookbook/${{ matrix.directory.path }}
          dockerfile: ${{ matrix.directory.name }}/Dockerfile

  serialize-example:
    name: Serialize Example
    runs-on: ubuntu-latest
    needs: [ setup-directory ]
    defaults:
      run:
        working-directory: cookbook
    strategy:
      matrix:
        directory: ${{fromJson(${{needs.setup-directory.outputs.directory)}})}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: unionai/flytectl-setup-action@v0.0.1
      - uses: actions/cache@v1
        with:
          path: /tmp/release-snacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}/
          key: release-snacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}-${{ github.sha }}
      - name: Serialize and Register proto for ${{ matrix.directory.name }}
        env:
          REGISTRY: "ghcr.io/flyteorg"
        run: |
          make -C $(echo ${{ matrix.directory.path }} | cut -d'/' -f1 ) serialize
          mkdir -p release-snacks
          tar -cvzf release-snacks/flytesnacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}.tgz  ${{ matrix.directory.path }}/${{ matrix.directory.name }}/_pb_output/
          flytectl sandbox start --flytesnacks=$GITHUB_WORKSPACE
          flytectl register file release-snacks/flytesnacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}.tgz -p flytesnacks -d development --archive --config=~/.flyte/config-sandbox.yaml

  release-example:
    name: Release Example
    runs-on: ubuntu-latest
    needs: [ setup-directory ]
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        directory: ${{fromJson(${{needs.setup-directory.outputs.directory)}})}}
    defaults:
      run:
        working-directory: cookbook
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: actions/cache@v1
        with:
          path: /tmp/release-snacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}/
          key: release-snacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}-${{ github.sha }}
      - name: Copy Artifacts
        run: cp -r cookbook/release-snacks/* /tmp/release-snacks-$(echo ${{ matrix.directory.path }} | cut -d'/' -f1 )-${{ matrix.directory.name }}/
      - name: Release flytesnack example
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
